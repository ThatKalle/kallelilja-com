name: 'ðŸš€ Terraform - Continuous Delivery (CD)'

on:
  push:
    branches:
      - main
    paths: 
      - 'terraform/**.tf'
      - 'terraform/input/**'
  workflow_dispatch:
    inputs:
      do-apply:
        description: Perform `terraform apply` command?
        type: boolean
        required: true

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  ci:
    uses: ./.github/workflows/terraform-ci.yaml
    secrets:
      TF_STATE_TOKEN:      ${{ secrets.TF_STATE_TOKEN }}
      TF_GITHUB_TOKEN:     ${{ secrets.TF_GITHUB_TOKEN }}
      TF_STATUSCAKE_TOKEN: ${{ secrets.TF_STATUSCAKE_TOKEN }}

  deploy:
    needs: ci
    name: 'Terraform - Production'
    runs-on: ubuntu-latest

    environment:
      name: production

    defaults:
      run:
        shell: bash
        working-directory: terraform

    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Terraform
        uses: ./.github/actions/setup-terraform

      - name: Terraform Init
        run: |
          terraform init \
           -backend-config="password=${TF_STATE_TOKEN}"
        env:
          TF_STATE_TOKEN: ${{ secrets.TF_STATE_TOKEN }}

      - name: Terraform Plan
        run: terraform plan -input=false
        env:
          GITHUB_TOKEN:         ${{ secrets.TF_GITHUB_TOKEN }}
          STATUSCAKE_API_TOKEN: ${{ secrets.TF_STATUSCAKE_TOKEN }}

      - name: Terraform Apply
        id: terraform_Apply
        if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch' && github.event.inputs.do-apply == 'true')
        run: terraform apply -auto-approve -input=false
        env:
          GITHUB_TOKEN:         ${{ secrets.TF_GITHUB_TOKEN }}
          STATUSCAKE_API_TOKEN: ${{ secrets.TF_STATUSCAKE_TOKEN }}
